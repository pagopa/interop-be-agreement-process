openapi: 3.0.3
info:
  title: Agreement Process Micro Service
  description: Offers operations to retrieve agreement data
  version: 0.0.1
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: 'https://gateway.interop.pdnd.dev/pdnd-interop-uservice-agreement-process/0.0.1'
    description: This service is the agreement process
security:
  - bearerAuth: []
tags:
  - name: process
    description: Implements agreement process
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  '/audience/{agreementId}':
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: retrieves agreement audiences
      description: returns the audience of the producer bound to the agreementId
      operationId: getAudienceByAgreementId
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
      responses:
        '200':
          description: audiences found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /status:
    get:
      security:
        - bearerAuth: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/agreement/{agreementId}/activate':
    parameters:
      - schema:
          type: string
          format: uuid
        name: agreementId
        in: path
        required: true
        description: identifier of the pending agreement to be activated
    patch:
      summary: Agreement Activation
      operationId: activateAgreement
      responses:
        '204':
          description: Pending agreement activated.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - process
      description: Activates the pending agreement if all the pre-requisites are met.
components:
  schemas:
    Audience:
      properties:
        producer:
          type: string
        audience:
          type: array
          items:
            type: string
      additionalProperties: false
      required:
        - producer
        - audience
    Problem:
      properties:
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: 'A short, summary of the problem type. Written in english and readable'
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
      additionalProperties: false
      required:
        - status
        - title
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
