include "kamon"

akka {
  stdout-loglevel = "OFF"
  loglevel = "DEBUG"
  use-slf4j = on
  coordinated-shutdown.run-by-actor-system-terminate = on
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.agreementprocess.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.agreementprocess.server.impl.LiveCheck"
      }
    }
  }
}

agreement-process {
  port = 8088
  api-keys {
    party-management = ${PARTY_MANAGEMENT_API_KEY}
  }
  jwt {
    audience = ${ACCEPTED_AUDIENCES}
  }
  services {
    catalog-management             = ${CATALOG_MANAGEMENT_URL}
    agreement-management           = ${AGREEMENT_MANAGEMENT_URL}
    party-management               = ${PARTY_MANAGEMENT_URL}
    attribute-registry-management  = ${ATTRIBUTE_REGISTRY_MANAGEMENT_URL}
    authorization-management       = ${AUTHORIZATION_MANAGEMENT_URL}
  }

  storage {
    kind = "S3"
    container = ${STORAGE_CONTAINER}
    agreement-document-path = "agreement/docs"
    agreement-document-path = ${?AGREEMENT_DOCS_PATH}
  }
}

interop-commons {
  jwt {
    public-keys {
      urls = ${WELL_KNOWN_URLS}
    }
  }
}

futures-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 8
    fixed-pool-size = ${?BLOCKING_DISPATCHER_POOL_SIZE}

    # TODO use this configs instead of a fixed pool size
    # core-pool-size-min = 8
    # core-pool-size-factor = 2.0
    # core-pool-size-max = 64

    # max-pool-size-min = 8
    # max-pool-size-factor = 2.0
    # max-pool-size-max = 64
  }
  throughput = 1
  throughput = ${?BLOCKING_DISPATCHER_THROUGHPUT}
}
